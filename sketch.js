const doors=[] //–º–∞—Å—Å–∏–≤ –¥–≤–µ—Ä–µ–π
let state="PICK"//–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–±–æ—Ä–∞
let pickedDoor;
let revealedDoor;//–æ—Ç–∫—Ä—ã—Ç–∞—è –¥–≤–µ—Ä—å
let switchButton, stayButton, playAgain;
let outcomeP;//—Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–∏–≥—Ä—ã—à–µ –∏–ª–∏ –≤—ã–∏–≥—Ä—ã—à–µ

let resultsP;//—Ä–µ–∑—É–ª—å—Ç–∞—Ç

let totalSwitchPlays=0; //–¥–ª—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–æ –∏–≥—Ä
let totalStayPlays=0;//–¥–ª—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π

let totalSwitchWins=0;
let totalStayWins=0;



//—Ñ—É–Ω–∫—Ü–∏—è –∏–≥—Ä–∞—Ç—å –∑–∞–Ω–∞–≤–æ
function startOver(){
    for (let door of doors){
        door.prize='üêê';
        door.html('');
        door.style('background-image','url(door1.png)')
    }
    const winner=random(doors);
    winner.prize='üöó';
    playAgain.hide();

    outcomeP.html('');
    state='PICK';
}

function setup(){
    noCanvas();
    for(let i=0;i<3;i++){
        doors[i]=createDiv("");
        doors[i].parent('#doors');
        //–∫–∞–∂–¥–∞—è –¥–≤–µ—Ä—å –±—É–¥–µ—Ç Div –Ω–∞ –≤–µ–± —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        doors[i].class('door');
        doors[i].index=i; 
        doors[i].mousePressed(pickDoor)//—Å–æ–±—ã—Ç–∏–µ –æ—Ç–≤–µ—á–∞—é—â–∏–µ –∑–∞ –∫–ª–∏–∫ –Ω–∞ –¥–≤–µ—Ä—å(–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ reveal)
    }
    switchButton=createButton('–ø–æ–º–µ–Ω—è—Ç—å')//–ø–æ–º–µ–Ω—è—Ç—å –≤—ã–±–æ—Ä(–∫–Ω–æ–ø–∫–∞)
    switchButton.mousePressed(playerSwitch);
    switchButton.hide();

    stayButton =createButton('–æ—Å—Ç–∞–≤–∏—Ç—å')
    stayButton.mousePressed(playerStay);
    stayButton.hide();

    playAgain=createButton("–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞")
    playAgain.mousePressed(startOver);
    playAgain.hide();

    resultsP = createP('');
    outcomeP =createP('');

    startOver();
}

function pickDoor(){
    if (state=='PICK'){
        state='REVEAL'
    pickedDoor=this;
    this.style('background-image','url(Activedoor.png)');//–¥–≤–µ—Ä—å –∫–æ—Ç–æ—Ä—É—é –º—ã –æ—Ç–∫—Ä—ã–ª–∏ (–ø–æ–¥—Å–≤–µ—Ç–∫–∞)
    reveal();
    }
}

function reveal(){
    //–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –æ–¥–Ω–æ–π –∏–∑ –¥–≤–µ—Ä–∏
    const options=[];//–º–∞—Å—Å–∏–≤
    for(let i=0;i<doors.length;i++){
        const door=doors[i];
        //–ø–æ–∫–∞ —ç—Ç–æ –Ω–µ —Ç–∞ –¥–≤–µ—Ä—å –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª –∏–≥—Ä–æ–∫ –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–∑–æ–º –º–∞—à–∏–Ω–∞
        //–µ–µ –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å
        if(i!=pickedDoor.index && door.prize !='üöó'){
            options.push(door);
        }
    }
    
    revealedDoor=random(options);
    revealedDoor.html(revealedDoor.prize);
    //–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    switchButton.show();
    stayButton.show();
}
//–ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–≤–µ—Ä—å –Ω–∞ –¥–≤–µ—Ä—å –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞ –∏ –Ω–µ –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞
 //—Ñ—É–Ω–∫—Ü–∏—è –æ –≤—ã–±–æ—Ä–µ
function playerSwitch(){
    totalSwitchPlays++;

    let newPick;
    for (let i=0;i<doors.length; i++){
        let door=doors[i];
        if (door!==pickedDoor& door!=revealedDoor){
            newPick=door;
            break;
        }
    }
    pickedDoor =newPick;
    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞
    checkWin(true);
}

//—É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª-–≤–æ –∏–≥—Ä
function playerStay(){
    totalStayPlays++;
    checkWin(false);
}


function checkWin(playerSwitch){

    switchButton.hide();
    stayButton.hide();
     //—Ä–∞—Å–∫—Ä–æ–µ–º –≤—Å–µ –¥–≤–µ—Ä–∏
    for (let door of doors){
        door.html(door.prize)
        door.style('background-image','url(Activedoor.png)');
    }
    if (pickedDoor.prize=='üöó'){
        outcomeP.html("üéÜ–í—ã –≤—ã–π–≥—Ä–∞–ª–∏ –º–∞—à–∏–Ω—É!üéÜ");
        outcomeP.style('color','green');
        outcomeP.style('text-align','center');
       

        pickedDoor.style('background-image','url(Activedoor.png)');

        if (playerSwitch){
            totalSwitchWins++;
        }else{
            totalStayWins++;
        }
    }
    else{
        outcomeP.html("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!")
        outcomeP.style('text-align','center');
        outcomeP.style('color','red');

        pickedDoor.style('background-color',"#FAA");

    }
     let switchRate = totalSwitchWins/totalSwitchPlays;
     let stayRate = totalStayWins/totalStayPlays;

     resultsP.html(
        `–í—Å–µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä: ${totalSwitchPlays}<br/>
    –ü–æ–±–µ–¥–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –≤—ã–±–æ—Ä: ${nf(100 * switchRate, 2, 2)} % <br/>
    –í—Å–µ–≥–æ –æ—Å—Ç–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä: ${totalStayPlays}<br/>
    –ü–æ–±–µ–¥–∞ –æ—Å—Ç–∞–≤–∏—Ç—å –≤—ã–±–æ—Ä: ${nf(100 * stayRate, 2, 2)}% `
      );
    //–∫–Ω–æ–ø–∫–∞ –∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
    playAgain.show();
    
}